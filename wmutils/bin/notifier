#!/bin/sh
#
# notifier - on-demand system info
# (c) arcetera 2015
#

volcheck() {
    pop " $(pamixer --get-volume --sink "$(pactl list sinks short | grep "RUNNING"| cut -d "	" -f2)")% volume"
}
volmute() {
    pop " volume $(amixer get Master | awk -F "[][]" '/%/ { print $6 }' | sed 's/off/muted/g;s/on/unmuted/g')"
}

battery() {
    bat=$(cat /sys/class/power_supply/BAT0/capacity)
    pop " ${bat}% battery"
}

batterywarn() {
    lvl=30
    crit_lvl=10
    batp=$(sed 's/%//' /sys/class/power_supply/BAT0/capacity)
    bats=$(cat /sys/class/power_supply/BAT0/status)
    while :; do
        if [ "$bats" = "Discharging" ]; then
            [ "${batp}" -le "${lvl}" ] && pop " low battery!"
            [ "${batp}" -le "${crit_lvl}" ] && systemctl suspend
        fi
        sleep 120
    done
}

backlight() {
    pop " $(xbacklight | sed 's/\..*//')% backlight"
}

musicToggle() {
    state=$(mpc status | sed -n 2p)

    if echo "$state" | grep -lq "\[playing\]"; then
        pop " Play Music"
    else
        pop " Pause Music"
    fi
}

musicStop(){
    pop " Stop Music"
}

prevSong(){
    pop " Previous Song"
}

nextSong(){
    pop " Next Song"
}

opt=$1
shift

case $opt in
    volume) volcheck ;;
    volmute) volmute ;;
    battery) battery ;;
    batterywarn) batterywarn ;;
    backlight) backlight ;;
    musictoggle) musicToggle ;;
    musicstop) musicStop ;;
    nextsong) nextSong ;;
    previoussong) prevSong ;;
    prevsong) prevSong ;;
    *) echo "invalid option" ;;
esac

